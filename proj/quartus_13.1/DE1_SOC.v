
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module DE1_SOC(

	//////////// ADC //////////
	// output		          		ADC_CONVST,
	// output		          		ADC_DIN,
	// input 		          		ADC_DOUT,
	// output		          		ADC_SCLK,

	//////////// Audio //////////
	// input 		          		AUD_ADCDAT,
	// inout 		          		AUD_ADCLRCK,
	// inout 		          		AUD_BCLK,
	// output		          		AUD_DACDAT,
	// inout 		          		AUD_DACLRCK,
	// output		          		AUD_XCK,

	//////////// CLOCK //////////
	// input 		          		CLOCK2_50,
	// input 		          		CLOCK3_50,
	// input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// SDRAM //////////
	output		    [12:0]		DRAM_ADDR,
	output		     [1:0]		DRAM_BA,
	output		          		DRAM_CAS_N,
	output		          		DRAM_CKE,
	output		          		DRAM_CLK,
	output		          		DRAM_CS_N,
	inout 		    [15:0]		DRAM_DQ,
	output		          		DRAM_LDQM,
	output		          		DRAM_RAS_N,
	output		          		DRAM_UDQM,
	output		          		DRAM_WE_N,

	//////////// I2C for Audio and Video-In //////////
	// output		          		FPGA_I2C_SCLK,
	// inout 		          		FPGA_I2C_SDAT,

	//////////// SEG7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// IR //////////
	// input 		          		IRDA_RXD,
	// output		          		IRDA_TXD,

	//////////// KEY //////////
	// input 		     [3:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// PS2 //////////
	// inout 		          		PS2_CLK,
	// inout 		          		PS2_CLK2,
	// inout 		          		PS2_DAT,
	// inout 		          		PS2_DAT2,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// Video-In //////////
	// input 		          		TD_CLK27,
	// input 		     [7:0]		TD_DATA,
	// input 		          		TD_HS,
	// output		          		TD_RESET_N,
	// input 		          		TD_VS,

	//////////// VGA //////////
	// output		          		VGA_BLANK_N,
	// output		     [7:0]		VGA_B,
	// output		          		VGA_CLK,
	// output		     [7:0]		VGA_G,
	// output		          		VGA_HS,
	// output		     [7:0]		VGA_R,
	// output		          		VGA_SYNC_N,
	// output		          		VGA_VS,

	//////////// HPS //////////
	// inout 		          		HPS_CONV_USB_N,
	output		    [14:0]		HPS_DDR3_ADDR,
	output		     [2:0]		HPS_DDR3_BA,
	output		          		HPS_DDR3_CAS_N,
	output		          		HPS_DDR3_CKE,
	output		          		HPS_DDR3_CK_N,
	output		          		HPS_DDR3_CK_P,
	output		          		HPS_DDR3_CS_N,
	output		     [3:0]		HPS_DDR3_DM,
	inout 		    [31:0]		HPS_DDR3_DQ,
	inout 		     [3:0]		HPS_DDR3_DQS_N,
	inout 		     [3:0]		HPS_DDR3_DQS_P,
	output		          		HPS_DDR3_ODT,
	output		          		HPS_DDR3_RAS_N,
	output		          		HPS_DDR3_RESET_N,
	input 		          		HPS_DDR3_RZQ,
	output		          		HPS_DDR3_WE_N,
	// output		          		HPS_ENET_GTX_CLK,
	// inout 		          		HPS_ENET_INT_N,
	// output		          		HPS_ENET_MDC,
	// inout 		          		HPS_ENET_MDIO,
	// input 		          		HPS_ENET_RX_CLK,
	// input 		     [3:0]		HPS_ENET_RX_DATA,
	// input 		          		HPS_ENET_RX_DV,
	// output		     [3:0]		HPS_ENET_TX_DATA,
	// output		          		HPS_ENET_TX_EN,
	// inout 		     [3:0]		HPS_FLASH_DATA,
	// output		          		HPS_FLASH_DCLK,
	// output		          		HPS_FLASH_NCSO,
	// inout 		     [1:0]		HPS_GPIO,
	// inout 		          		HPS_GSENSOR_INT,
	// inout 		          		HPS_I2C1_SCLK,
	// inout 		          		HPS_I2C1_SDAT,
	// inout 		          		HPS_I2C2_SCLK,
	// inout 		          		HPS_I2C2_SDAT,
	// inout 		          		HPS_I2C_CONTROL,
	// inout 		          		HPS_KEY,
	// inout 		          		HPS_LED,
	output		          		HPS_SD_CLK,
	inout 		          		HPS_SD_CMD,
	inout 		     [3:0]		HPS_SD_DATA,
	// output		          		HPS_SPIM_CLK,
	// input 		          		HPS_SPIM_MISO,
	// output		          		HPS_SPIM_MOSI,
	// inout 		          		HPS_SPIM_SS,
	input 		          		HPS_UART_RX,
	output		          		HPS_UART_TX,
	// input 		          		HPS_USB_CLKOUT,
	// inout 		     [7:0]		HPS_USB_DATA,
	// input 		          		HPS_USB_DIR,
	// input 		          		HPS_USB_NXT,
	// output		          		HPS_USB_STP,

	//////////// GPIO_0, GPIO_0 connect to GPIO Default //////////
	inout 		    [35:0]		GPIO_0,

	//////////// GPIO_1, GPIO_1 connect to GPIO Default //////////
	inout 		    [35:0]		GPIO_1
);



//=======================================================
//  REG/WIRE declarations
//=======================================================




//=======================================================
//  Structural coding
//=======================================================


de1_soc de1_soc(
	.clk_clk(CLOCK_50),
	
	// DDR3 RAM --------------------------------
	.hps_0_ddr_mem_a(HPS_DDR3_ADDR),
	.hps_0_ddr_mem_ba(HPS_DDR3_BA),
	.hps_0_ddr_mem_ck(HPS_DDR3_CK_P),
	.hps_0_ddr_mem_ck_n(HPS_DDR3_CK_N),
	.hps_0_ddr_mem_cke(HPS_DDR3_CKE),
	.hps_0_ddr_mem_cs_n(HPS_DDR3_CS_N),
	.hps_0_ddr_mem_ras_n(HPS_DDR3_RAS_N),
	.hps_0_ddr_mem_cas_n(HPS_DDR3_CAS_N),
	.hps_0_ddr_mem_we_n(HPS_DDR3_WE_N),
	.hps_0_ddr_mem_reset_n(HPS_DDR3_RESET_N),
	.hps_0_ddr_mem_dq(HPS_DDR3_DQ),
	.hps_0_ddr_mem_dqs(HPS_DDR3_DQS_P), 
	.hps_0_ddr_mem_dqs_n(HPS_DDR3_DQS_N),
	.hps_0_ddr_mem_odt(HPS_DDR3_ODT),
	.hps_0_ddr_mem_dm(HPS_DDR3_DM),
	.hps_0_ddr_oct_rzqin(HPS_DDR3_RZQ),
	
	// HPS SD card -----------------------------
	
	.hps_io_0_hps_io_sdio_inst_CMD       (HPS_SD_CMD),       //                     hps_io_0.hps_io_sdio_inst_CMD
	.hps_io_0_hps_io_sdio_inst_D0        (HPS_SD_DATA[0]),        //                             .hps_io_sdio_inst_D0
	.hps_io_0_hps_io_sdio_inst_D1        (HPS_SD_DATA[1]),        //                             .hps_io_sdio_inst_D1
	.hps_io_0_hps_io_sdio_inst_CLK       (HPS_SD_CLK),       //                             .hps_io_sdio_inst_CLK
	.hps_io_0_hps_io_sdio_inst_D2        (HPS_SD_DATA[2]),        //                             .hps_io_sdio_inst_D2
	.hps_io_0_hps_io_sdio_inst_D3        (HPS_SD_DATA[3]),        //                             .hps_io_sdio_inst_D3
	
	// HPS UART ----------------------------------
	.hps_io_0_hps_io_uart0_inst_RX       (HPS_UART_RX),       //                             .hps_io_uart0_inst_RX
	.hps_io_0_hps_io_uart0_inst_TX       (HPS_UART_TX),       //                             .hps_io_uart0_inst_TX

// SD CARD ------------------------------------
	
	.plasma_soc_0_sd_card_spi_cs(),
	.plasma_soc_0_sd_card_spi_miso(),
	.plasma_soc_0_sd_card_spi_mosi(),
	.plasma_soc_0_sd_card_spi_sclk(),

	// BASIC I/O -------------------------------
	.plasma_soc_0_leds_ld(LEDR),//(LEDR),
	.plasma_soc_0_switches_sw(SW),//(KEY),

	.hex_0_external_connection_export(HEX0),
	.hex_1_external_connection_export(HEX1),
	.hex_2_external_connection_export(HEX2),
	.hex_3_external_connection_export(HEX3),
	.hex_4_external_connection_export(HEX4),
	.hex_5_external_connection_export(HEX5),

	.switches_external_connection_export(SW),  // switches_external_connection.export
	
	// UART ------------------------------------
	.plasma_soc_0_uart_uart_rx(), //HPS_UART_RX),
	.plasma_soc_0_uart_uart_tx(), //HPS_UART_TX),

	// SDRAM -----------------------------------
	.sdram_controller_0_wire_addr(DRAM_ADDR),
	.sdram_controller_0_wire_ba(DRAM_BA),
	.sdram_controller_0_wire_cas_n(DRAM_CAS_N),
	.sdram_controller_0_wire_cke(DRAM_CKE),
	.sdram_controller_0_wire_cs_n(DRAM_CS_N),
	.sdram_controller_0_wire_dq(DRAM_DQ),
	.sdram_controller_0_wire_dqm({DRAM_UDQM, DRAM_LDQM}),
	.sdram_controller_0_wire_ras_n(DRAM_RAS_N),
	.sdram_controller_0_wire_we_n(DRAM_WE_N),

	.pll_0_sdram_clk_clk(DRAM_CLK)
);
endmodule
